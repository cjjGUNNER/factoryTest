<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fc.maintain.dao.IUserInfoDao" >
  <resultMap id="BaseResultMap" type="com.fc.common.entity.UserInfo">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="login_code" property="loginCode" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="password" jdbcType="VARBINARY" property="password" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="password_src" jdbcType="VARCHAR" property="passwordSrc" />
    <result column="disabled" property="disabled" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, login_code, user_name, sex, password
  </sql>
  <select id="queryByLoginCode" parameterType="string" resultMap="BaseResultMap">
    select u.*, r.role_name from user_info as u
    left join role_info as r on u.role_id = r.id
    where u.login_code = #{loginCode,jdbcType=VARCHAR}
    and u.disabled = 0
  </select>
  <select id="listByRoleId"  resultMap="BaseResultMap" parameterType="int">
    SELECT 
	    id, role_id, login_code, user_name, sex
	FROM
	    user_info
	WHERE
	    disabled = 0 AND role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
  <insert id="insert" parameterType="UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="loginCode != null" >
        login_code,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="passwordSrc != null" >
        password_src,
      </if>
      <if test="disabled != null" >
        disabled
      </if>       
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="loginCode != null" >
        #{loginCode,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARBINARY},
      </if>
      <if test="passwordSrc != null" >
        #{passwordSrc,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=INTEGER},
      </if> 
    </trim>
  </insert> 
  
  <select id="queryPageUserInfo" resultMap="BaseResultMap" parameterType="UserInfo">
    select u.id, <include refid="Base_Column_List" />,role_name,u.disabled 
    from user_info as u left join role_info as r on u.role_id=r.id 
    order by id desc limit #{pageStart,jdbcType=INTEGER},#{rows,jdbcType=INTEGER}
  </select>
  
  <select id="countUserInfo" resultType="int">
    select count(*) from user_info
  </select>
  
  <select id="queryById" parameterType="int" resultMap="BaseResultMap">
    select * from user_info where id = #{id,jdbcType=INTEGER}
  </select>
  
  <update id="updateById" parameterType="UserInfo">
    update user_info
    <set >
     <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="loginCode != null" >
        login_code = #{loginCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARBINARY},
      </if>
      <if test="passwordSrc != null" >
        password_src = #{passwordSrc,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteByIds" parameterType="int" >
    delete from user_info where id in
    <foreach item="idItem" collection="array" open="(" separator="," close=")">#{idItem}</foreach>
  </delete>
  
  <update id="updateDisabled" parameterType="UserInfo">
    update user_info set disabled = #{disabled,jdbcType=INTEGER} where id in
    <foreach item="idItem" collection="ids" open="(" separator="," close=")">#{idItem}</foreach>
  </update>
</mapper>